Ansible
===========
ansible is an opensource configuration management tool and also we can use as a Deployment tool,provided by redhat.

Configuration is some task which we want to execute on the server, it can be 

1) CReating Users/Groups ..etc
2)Installing and removing a software/package
3)creating/updating/copying files.
4) start/stop services .etc

Configuration Management tools
Ansible
Chef
Puppet
Saltstack

Two types configuration management tools
=============================================
Push based configuration --> server only push to hosts (Ansible)
Ansible Agent less configuration,Ansible written in a python language.
Pull based configuration --> host only pull from server( with agent software pull) (Chef,Puppet)

Terraform -->Infrastructure as a code
we can provision /modify/destory infrastructure(Network,Servers,storage..etc)


can we install Ansible in windows machine or is Ansible Machine(controller) can be a windows?
No
can we configue windows using ansible?
yes, we can configure windows machine using ansible.

What can Ansible do?
cofiguration management
Continuous delivery

why ansible?
Predefined modules/functionalities.
yml based scripts.
Idempotent(all ready configuration is done it's not modified any thing)
Push Based and Agent less.

Ansible Components:
=====================
Host Inventory --> we can maintain deatils of host machines(Servers) to configure. we can list and group servers(Host Machines)
Two types of Host incentory
----------------------------
Satic Inventory --> It's a file in which we can list host(server)details like IP/HostName, User Name,Password ..etc, we can group the servers.
Default location or path of Host inventory --> /etc/ansible/hosts
Dynamic Inventory --> it's a Script(Python/Sheel) which will fetch host details dyanmically from external source like from Cloud provider, databses etc.

Connection Plugins
-------------------
SSH --> Linux
WINRM -->windows Remote Machine

Playbooks --> It's yaml basedvscript (configuration), play book contains atsks which you want to perform on the servers.
we will usse ansible modules to write the tasks.
Sample:
-hosts: all
 tasks:
 - name: create a user
   user:
    name: mithun
    create_home: yes
    password: Naveen@123
    group: <groupName>

Ansible configuration
------------------------
Create 3 servers 1 for ansible servers 2 for hosts
create Ansible user in server, give user name like ansible,sudo useradd ansible, and give password,sudo passwd ansible,Password Princy@#$2022
bydafult password based authentication not enable in aws,so we have to enable, go to sudo vi /etc/ssh/sshd_config
 keep like this # To disable tunneled clear text passwords, change to no here!
PasswordAuthentication yes
#PermitEmptyPasswords no
#PasswordAuthentication no
restart the service sudo service sshd restart, it will restart service.
giving sudo access to ansible user, give sudo visudo,
## Read drop-in files from /etc/sudoers.d (the # here does not mean a comment)
#includedir /etc/sudoers.d
ansible  ALL=(ALL)  NOPASSWD: ALL
ec2-user  ALL=(ALL)  NOPASSWD: ALL

login ansible user like sudo su ansible, required to install python, sudo yum install python3-pip -y,(It's a python package manager)
Update package Manager
sudo yum update -y
install EPEL Repository on RHEL
sudo dnf -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
confirm EPEL installation
sudo dnf repolist epel
Ansible Towe user Ansible playbook to deploy itself so we also need ansible installed.
sudo yum -y install ansible vim curl

sudo amazon-linux-extras install ansible2
ansible --version
python --version

sudo chown ansible:ansible -R /etc/ansible/ change permission
cd /etc/ansible
vi hosts in this add private ip address
# ungrouped hosts below give ip
172.31.1.200
172.31.1.0

ansible all -m ping for checking ping, wiil get verify first time host key verification, 
where we have to disable this, vi /etc/ansible/ansible.cfg, #host_key_checking = False  to uncomment,
-------------------------------------------------------------------
how to make ssh
===================
vi /etc/ansible/hosts
172.31.1.200 ansible_user=ec2-user
172.31.1.0 ansible_user=ec2-user

vi ~/ddddd.pem
add the key
vi /etc/ansible/hosts
172.31.1.200 ansible_user=ec2-user ansible_ssh_private_key_file=~/ddddd.pem
172.31.1.0 ansible_user=ec2-user ansible_ssh_private_key_file=~/ddddd.pem

check this command later    ansible all -m ping
the private key have wide permissions
chmod 400 ~/ddddd.pem
now  will able to do access ssh connection
---------------------------------------------------------------------------
cat /etc/passwd                        for checking users
userdel  username                      for deleting
 ps aux | grep 3714                    for checking ansible user
 
pwd /home/ansible/git/ansible-scripts

vi createuser.yml
-------------------------------------------------------------------------------
 hosts: all
  tasks:
  - name: Create ansible User
    user: 
      name: ansible
      create_home: true
      shell: /bin/bash
      comment: "Ansible Management Account"
      expires: -1
      password: "{{ 'Princy@#$2022' | password_hash('sha512','A512') }}"
  - name: setup Sudo Access for ansible User
    copy:
      dest: /etc/sudoers.d/ansible
      content: 'ansible ALL=(ALL) NOPASSWD:ALL'
      validate: /usr/sbin/visudo -cf %s
  - name: Disable Password Authentication
    lineinfile:
      dest=/etc/ssh/sshd_config
      regexp='^passwordAuthentication'
      line="passwordAuthentication yes"
      state=present
      backup=yes
    notify:
      - restart ssh
  handlers:
    - name: restart ssh
      service:
        name=sshd
        state=restarted
 ---------------------------------------------------------------------       
for execute the yml file with below command
ansible-playbook creatyser.yml
ansible-playbook  -b creatyser.yml --> become sudo user
---------------------------------------------------------------------

how to make ssh connection
--------------------------
vi /etc/ansible/hosts
#172.31.1.200 ansible_user=ec2-user ansible_ssh_private_key_file=~/ansible.pem
#172.31.1.0 ansible_user=ec2-user ansible_ssh_private_key_file=~/ansible.pem

vi /etc/ansible/hosts
172.31.1.200 ansible_user=ansible ansible_password=Princy@#$2022
172.31.1.0 ansible_user=ansible ansible_password=Princy@#$2022
ansible all -m ping        make a shh connection
---------------------------------------------------------------------------------
ssh-keygen in ansible server user
========================================
ssh-keygen     generate ssh key with ansible user in ansible server
ls .ssh/
id_rsa  id_rsa.pub known_hosts    ---> ssh key generated, without password and pem file you can use ssh key to connecting hosts.



 hosts: all
  tasks:
  - name: Create ansible User
    user: 
      name: ansible
      create_home: true
      shell: /bin/bash
      comment: "Ansible Management Account"
      expires: -1
      password: "{{ 'Princy@#$2022' | password_hash('sha512','A512') }}"
  - name: Deploy Local user SSH Key
    authorized_key:
       user: ansible
       state: present
       mange_dir: true
       key: "{{ lookup('file', '/home/ansible/.ssh/id_rsa.pub') }}"
  - name: setup Sudo Access for ansible User
    copy:
      dest: /etc/sudoers.d/ansible
      content: 'ansible ALL=(ALL) NOPASSWD:ALL'
      validate: /usr/sbin/visudo -cf %s
  - name: Disable Password Authentication
    lineinfile:
      dest=/etc/ssh/sshd_config
      regexp='^passwordAuthentication'
      line="passwordAuthentication no"
      state=present
      backup=yes
    notify:
      - restart ssh
  handlers:
    - name: restart ssh
      service:
        name=sshd
        state=restarted

vi /etc/ansible/hosts 


[appserver] grouping server
172.31.1.200
172.31.1.0

ansible --inventoryfile <path> -m <module>
ansible -i <path> -m <module>

ansible <all/groupName/hostname> -m <module> -a <args>
ansible all -m ping
ansible-doc -l  for checking modules
ansible-doc -l <module> moredetail about module
ansible-doc -l | grep "copy"

ansible all -m shell -a "git --version"  via checking shell
ansible all -m shell -a "date"
ansible all -m shell -a "df -kh" checking file system of host machines

ansible all -m shell  -b -a "yum install git -y"
ansible appservers -m shell  -b -a "yum install git -y"
ansible 172.89.12.13 -m shell  -b -a "yum install git -y"

ansible all -m yum -a "name=git state=present"
ansible all -m yum -b -a "name=git state=present"
ansible all -m yum -b -a "name=git-2.0.1 state=present" install the software
ansible all -m yum -b -a "name=git state=absent"  remove the software
ansible all -m apt -a "name=git state=present"

irresepective of underlying os which module you can use to manage apckages using package manager in ansible?

package
 using ansible perform below configurations on appservers.
 
 ansible appserver -m yum -b -a "name=httpd state=present"
 
 install httpd software
 ansible appserver -m yum -b -a "name=httpd state=present"
  ansible all -m yum -b -a "name=httpd state=present"
 copy index.html file
 ansible all -m copy -b -a "src=/home/ec2-user/index.html dest=/var/www/html/index.html"   copying file from source to destination
 ansible all -m copy -b -a "src=/home/ec2-user/index.html dest=/var/www/html/index.html remote_src: yes"
 scp 
 start httpd service
ansible-doc -l |grep "get_url"  download urls

- hosts: all
  tasks:
  - name: install httpd
    yum:
      name: httpd
      state: present
   - name: copy index.html
     copy:
       src: index.html
       dest: /var/www/html/index.html
    - name: start https service
      service:
        name: httpd
        state: started
  
  
sudo ansible-playbook httpd.yml --syntax-check 
    
how do u dry run ansible play book or what is dry in run in ansible?

ansible-playbook installhttpd.yml
ansible-playbook installhttpd.yml --check

what is verbose or how do run playbook in verbose?
ansible-playbook installhttpd.yml -v single verbose
ansible-playbook installhttpd.yml -vv  double verbose


This playbbok will install HTTP server and start the server.
---
- hosts: all
become: true
tasks:
- name: Install Apache HTTP server
yum: name=httpd update_cache=yes state=latest
- name: Start HTTP Server
service: name=httpd enabled=yes state=started



- hosts: all
become: true
tasks:
- name: Creating a file
file:
path: /opt
owner: root
mode: 0777
state: touch


-





