GIT
----

GitHub
gitlab
Bitbucket
svn




1) create organization
2) create a repository
3) createa a team
4) add users to the team
5) provide repository accesss to the team

Git commands
================
open Git Bash  --> windows
connecting to linux server  --> git --version
cd ~/Desktop --> Windows
cd ~ --> home directory in linux server
mkdir wallmart
cd wallmart
pwd --> present working directory

git init  --> git init is command to creates a empty git local repository 

Working Area                   Sageing Area                                   Local Repo
----------------------------------------------------------------
vi employtee.java 

git status --> check whether local stageing working area file will check
                             -------->                                   ------>git commit -m "first commit
                            git add .           all files going to move
                           git add *              all files going to move
                         git add employtee.java     one file going to move
git add  --> moving from Working Area to Sageing Area  

git commit -m "first commit" --> all the files moving from local repo to remote repo which are in staging area

who you are?

git config --global user.name "snaveen457"
git config --global user.email "snaveenapt457@gmail.com"

git config --global --list         ---> check the names 

untracked file (Red Colour) --> the files which are available in working place those called untracked file
tracked file (Green Colour) --> the files which are available in staging area those called tracked file

git remote add   wm --> git remote add is a command to map your remote repository with local repository.

wm --> alais name for the remote repo url

git remote -v --> check whether which url is mapped

git push aliasname branchname --> pushing the code from local repo to remote repo
git push wm master

how many commid id's are there waht is command?
git log

head is showing latest commit id

commit id
vcs  version control system

particular commited id how many files create how to see?
git show commit id

git show --pretty="" --name-only commit id       it will show file names

git commit -a( only modified file) -m "update users file"  --> when already existing file weupdate that time will execute.

git reset --> what ever files which are in staging area it is going to revert back to the working area
git reset filename      --> particular file revert it back from staging area to working area


in which badly commited code remove that code
----------------------------------------------
git revert --> what ever commited id is going to pause, in that commit id what ever files are created newly 
         those are going to delete and what ever files are updated updated content is  going to be deleted.

once hit the git revert it will open window in that add reverted.. and save it.

what is difference between git reset and git revert?

can we use git revert for older commit as well?
A) no

.gitignore
===========
some times we don't want to commit the  files, which are generated by IDElike .project and .classpath files or 
some node module folders like node_module folder into a git repository.
to ignore these files and folders to commit we will create one file called .gitignore and we will keep the files names or directory names which we don't want to commit as follows.

IDE(Integrated development environment)
Exlipse
.classpath
.project
My Eclipse
Intellij
Visual studio Code
node_modules
Atom

Branches
==========
git branch   --> it will display how many branches is there

git branch branchname(development)   --> for creating branch command

git checkout branchname(development)    --> switched to the one branch to another branch
> 
git coomit -a -m  "updated code"   --> it is already file updated code then only it possible

git diff development

git merge development   --> merge purpose what ever code one branch to another branch
git merge   --->    it will get updated code from local repo and it get into the working area also

git checkout -b branchname   ---> crating branch and switch to that branch one time

git push wm(aliasname) --all  --> we can push the all branches from local repo to remote repo
git push wm(aliasname) stage development   --> individual pushing branches

git conflicts  --> when you are going to get the merge conflicts?
                  when you are going to integrate one brach to another branch with same files same lines is updated in line that time it is going to merge conflicts

git pull -->

git branch  --> diplay local repo branch
git branch -a --> display all branches
git branch -r  --> display remote repo branches

git branch -d master  --> deleting branch local repository

git push aliasname :branchname  --> deleting branch remote repository
git push wm :development
---------------------------------------------------------------
Tags
====

what is the diff b/w branch and taag?
Branch                                  
-----
Branch is mutable                 once created branch you cannot modified branch
on going development              this time need to be create branch
git branch branch name             creating branch
git branch                         display all branches
git push aliasname branchname      push to remote repo from local repo single branch
git push aliasname --all           push to remote repo from local repo all branches
Tag
---
Tag is an immutable              once you create tag you cannot be modified tagcode
production deployment            this time need to be create tag
git tag tagname                  giving tag name
git tag                          display tags
git push aliasname tagname       push to remote repo from local repo single tagname
git push aliasname --tags        push to remote repo from local repo all tags
git tag -d tagname               deleteing tag
Tags are going to be create which branch?
Master branch

git Stash ---> what is code available(incompleted commit) in working area it will take one temporary backup
before commiting the code you should not switch the other branch.

git stash list  --> backup files list

git stash apply  --> it will coomit for backup file when ever you switch the particular branch
git statsh drop  --> deletd backup file
git stash pop  --> it will apply the command and it will delte the file

git cherry pick 
================
git cherry-pick  --> what ever commit id you are specifying those files are going to integrated to other branch(master)

in commit DC3 what ever files i have commited in DC3 those updates i want to integrate on master branch.

master
|
v development DC1 DC2 DC3 DC4
git merge development  going to execute   all the commits going to execute the master branch


Git clone
==========
git clone repo url  --> git clone from remote repo to local repo download entire code

git pull or git fetch  --> get the updated code from remote repo

git pull  --> it will get updated code from Remote repo to local repo and it get into the working area copy also

git fetch  -->  it will get updated code from Remote repo to local repo 

git pull = git fetch+git merge

what is the difference b/w git fetch and git pull?

Remote Repo    updated code here

Local Repo  

Working Area

git fetch origin(aliasname) master
git merge origin/master

when we use git fetch and git pull?






















