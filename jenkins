jenkins
---------------
jenkins is an opensource, java based, ci tool.

hudson --> 2004 --> oracle

2011 --> jenkins community

jenkins --> jenkins community

CI is the process of automating build, test the code, everytime a developer push the code.

Continuous Integration= Continuous Testing + Continuous Build

CI Benfits
-----------
Immediate bug detection
No integration step in the software development lifecycle
a deployable system at any given point
Record of evolutoon of the project

in house project/ Internal project       using continuous Deployment
External Project --> wallmart/ floikart  using Continuous Delivery

jacoco
java code coverage   plugin 

sonatype nexus repo
jfrog artifactory repo


Jenkins Installation
---------------------

sudo su -

yum install wget -y

sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo

sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key

sudo yum upgrade

sudo amazon-linux-extras install java-openjdk11 -y

sudo yum install fontconfig java-11-openjdk 

sudo yum install jenkins -y

sudo systemctl enable jenkins

sudo systemctl start jenkins

sudo systemctl status jenkins

Public ip and default port number 8080 you can login

cat /var/lib/jenkins/secrets/initialAdminPassword
e4dfb3c5bb304fe4a8d27c05097267ee
jenkins
username: Naveenstar
Password: Princy@#$2022

https://github.com/MithunTechnologiesDevOps

https://github.com/snaveen457/maven-web-application.git

crate job 

yum install git -y
git --version

github 
username: snaveen457
Password: Vooha@#$2022

give branch name development

build steps      to build maven
invoke top-level               Maven targets is avaliable for build 
give goals name     clean package

install maven in jenkins server better reduce errors

in dahboard go to manage jenkins,click global tool configuration, click on Add maven, give name maven3.6.2 and save

in dashboard go to project, go to configure, select maven version, and save.


Building war: /var/lib/jenkins/workspace/wallmart-dev/target/maven-web-application.war

/usr/lib/jvm
~/.bash_profile
java-11-openjdk-11.0.18.0.10-1.amzn2.0.1.x86_64
create sonarqube server and login with web browser

open git repository, go to development branch, got to pom.xml file inside sonarqube ip address and pot number need to give, and create token on sonarqube we can add and commit changes.

in jenkins go to job, go to configure, in maven clean package next give like sonar:sonar after save it.

build the code one more time it will code goes to git repo and maven and sonarqube server also.


pom.xml giving repository details

configure nexus 

Not authorised nexus credential will give at vi setting.xml file

cd /var/lib/jenkins/ --> jenkins directory root permission need to give
cd tools/
cd hudson.tasks.Maven_MavenInstallation
ls
cd Maven_3.9.0
ls
cd conf/
vi settings.xml
<server>
      <id>nexus</id>
      <username>admin</username>
      <password>Princy@#$2022</password>
    </server>            after save
	
Tomcat 

Deploy to container 	this plug in using for deploy 
	
go to jenkins dashboard, click manage jenkis , 	go to manage plugins, search Deploy to container plugin , click on install withou restart.

select the tomcat server url, go to jenkins, select the job, click on configure, scrol down post build action under Deploy war/ear to a container ,
select add container,go to tomcat8.9.0,give the tom cat url,tom cat server credentials. give package name also **/maven-web-application.war, give context path also. and save.

403 satus code forbidden 

manager-gui
admin-gui

manager-script  tomcat
cd /opt/tomcat9/conf
vi tomcat-users.xml
add manager-script

for adding timestamp at console output
go to job, click on configre, scrool down, under build environment, select add timesatmps to the console output,
click on save.

(Workspace delete) Delete workspace before build starts 

(Delete old builds) Discard old builds, days to keep builds 5 days, max no of builds to keep 5, max no of builds to keep with artifacts 5.

send e mail notification

(Automate build trigger process)
------------------------------------
poll SCM
Min Hours Dayofthemonth month Dayofweek
go to job, click on configure, scroll down under build triggers select poll scm, give that contact format(time and date)
my requiremnt every 1 min, so every 1 min need to give * * * * *,and save.
updated code only going trigger poll scm will do

build periodically
Min Hours Dayofthemonth month Dayofweek
go to job, click on configure, scroll down under build triggers select build periodacally, give that contact format(time and date)
my requiremnt every 1 min,so every 1 min need to give *****,and save.
build peridiocally what ever particular time configure it will going trigger that time only.

. 
Disable this project (when ever shduled mainatince is there that time will use)
 --> it will not show build now option in jenkins when it disable.
----------------------------
git web hooks --> Auto triger from git hub latest commits and push to jenkins
it is used to integrate jenkins with github projects and trigger a job when developer push the code in github repo.
setup github webhook
----------------------
1)Navigate to the "settins" page of your repository
2)click the webhooks&service" tab in the side bar
3)click the "Add webhook"button
4)For the "Payload URL", use the jenkinsURL, set the "Content type" to application/JSON
5)Click"Add webhook"

(to generate the test report) install JACOCO Plug in
-----------------------------------------------------
Eclipse
Eclama

JACOCO generate test report
JACOCO plugin not deployed when code coverage is notreached is 80percent

build is success or failure i need to send eamil notification
--------------------------------------------------------------
we have to configure SMTP with jenkins server.

smtp.gmail.com

sanveenstar777@gmail.com

smtp 465

go to manage jenkins, configur systems,scroll down end email notification, give smtp server smtp.gmail.com,
go to advanced use SMTP Authentication, user name gmail password,use ssl, replay to address gmail.

go to manage jenkins, configur systems,scroll down end extended email notificatication,give smtp server smtp.gmail.com,
smtp user name and password,use ssl, default recipients give gmail id,save.

jenkins directory structure
-----------------------------
/var/lib/jenkins jenkins home directory
/var/log/jenkins jenkisns log directory

/jobs
flikart-dev
bilds --> dir name
15 -->dir name
logs -->file
nextbuild number -->file

flipkar-qa
builds

workspace
-------------
flikart-dev  --> source code is avaliable
flikart-dev@tmp

users
----------
user information store in users.xml 


plugins
----------
what ever installed plugin stored in plugins.
nodes
----------
default node is master

-------------------------------------
Maven Project type
------------------

maven integration plug in going to see project type

click on new item, give project name as maven project, descrpition, source code management,git repository url,give git credntial, give development branch,
scroll down pre steps build maven version give it, root pom pom.xml, goals  clean package,build settings e mail notifications give e mail id,
save.
now trigger maven job

plugin management
-------------------
Deploy to container             --> to deploy the application into Tom cat server
Deploy weblogic (oracle)        --> to deploy application into enterprise application server
maven integration               --> to get that mavenproject type we are going to install maven integration project
safe Restart                    --> jenkins url restart or jenkins url safeRestart
jenkins url restart             --> running jobs will stop and restart
jenkins url safeRestart         --> jenkins will restart once all running jobs are finished.
Next Build Number               --> change the next build number from existing one required from buld number.
JACOCO                          --> to generate the test reports
SSH Agent                       --> when pipeline project time we will use
Email Extension                 --> to get mails
sonarQube Scanner               --> sonar qube servr details need to provide with help this plug in.
no build script
no pom.xml                      --> sonarqube server details 
Audit trail plugin              --> how to track which user loged in and deleted job and trigger job
tail -f audittrail.log.0          updated code it will show automatically
Schduled build                  --> particular time build to schdule
Artifactory plugin              --> integrated with nexus will use this plugin
cloud foundry                   --> connect IBM Cloud through jenkins server use this plugin
Blue ocean                      --> separe you can do pipeline
publish over ssh                -->
ThinBackup                      -->
Build name Description setter   -->  for giving name to build 
convert to pipeline             --> existing build project type will change
invoke top-levelmaven targets   --> to build code

Pipeline project

script
jenkins service for password forgot jenkins to recovery
/var/lib/jenkins
config.xml
<useSecurity>true</useSecurity>
restart jenkins service for password forgot jenkins to recovery

tomcat/jBoss/wildfly/jenkins --> 8080 all these defalut port number

Tomcat --> server.xml in this file onlychange port number

jenkins --> /etc/sysconfig/jenkins change port number in jenkins

/etc/sysconfig  --> Redhat
/etc/default    --> ubuntu
jenkins
vi jenkins
JENKINS_pORT="9980"
after restart it
systemctl restart jenkins

Build with the parameters
-----------------------------
flipkart-dev
flipkart-qa
flikart-prod  instead of create 3 jobs we can create one job and we can give the vlues when ever trigger the job

go to flipkart-dev,go to configure,scrol down this under general select this project is parameterized,
select add parameter and select chioce parameter,give the name BranchName,
in choice give branch names master,development,testqa,stage
under Branches to build
Branch Specifier (blank for 'any'
*/$(BranchName)

String Parameter
Name Name
Default Value Naveen

under build steps
Execute shell
echo "Name is: ${Name}"

click on build with parameters,
Create View
------------
create a view add that jobs which we are working for that one navigate into particular jobs.
click on plus symbol,create view,give the name flipkart-project,select the list view, click on ok.
in that view what ever want jobs display select that jobs and click on ok. 

if you want to delete view it will delete view only.

now create one job flipkart-prod, edit view,which job display you can select click on ok.

when ever particular view creating job select particular view and create.

Jenkins security
-----------------
how to jenkins access to the development team?


how create users 4
-------------------

Developers
-------------
mithun
ruthvik

Devops
----------
shishir
manan

go to manage jenkins, go to manage users, click manage users, create user, give username mithun and give password
same to create users to 3 names
user informatin store in file called users.xml
cd /var/lib/jenkins/users/ path for users.xml
login with created users and check whethe login or not
how to restrict admin access to user?
login with jenkins admin user, go to the manage jenkins, click on configure global security,check LDAP(Separate admin team to support for this),
under Authentication, jenkins own user database,
under Authorization,By default logged in users can do anything this option,in real time never use this one,
select project-based Matrix Authorization strategy,select add user or group,add all users,
Authentication -->it is going to check that valid credential or not.
Authorization --> ofter checking valid credential, authorization checks which access you have.

Pipeline project type
-------------------------
pipeline script
1)scripted way
------------------

node('master')

(OR)127 status code standard code, mavenHome=/var/lib/jenkins/tools/hudson.tasks.Maven_MavenInstallation/maven_3.9.0
==================================================================================================================
node
{
def mavenHome = tool name: "maven 3.9.0"
stage ('CheckoutCode'){
git branch: 'development', credentialsId: 'af55cb54-7ec0-4414-8c0e-4a8b999dadd8', url: 'https://github.com/snaveen457/maven-web-application.git'
}

stage('Build'){
sh "${mavenHome}/bin/mvn clean package"
}
 
 stage('ExecuteSonarQubeReport'){
 sh "${mavenHome}/bin/mvn sonar:sonar"
 }
 stage('UploadArtifactintonexus'){
 sh "${mavenHome}/bin/mvn deploy"
  }
 stage('DeployAPpintoTomcat'){
 sshagent(['ae8a6ec4-f887-428d-8d23-a777d300da28']){
 sh "scp -o  StrictHostKeyChecking=no target/maven-web-application.war ec2-user@18.202.251.119:/opt/tomcat/webapps/"
 }
 }
 stage('sendmailnotification')
 mail bcc: '', body: '''Build Over.

Regards''', cc: 'snaveenapt457@gmail.com', from: '', replyTo: '', subject: 'Build over', to: 'snaveenstar777@gmail.com'
}

===============================================================================================================================================
node{
    
     def mavenHome = tool name: "maven 3.9.0"    --->local variable

    stage("copying code from the git"){
        git credentialsId: '5fcccbf1-20a9-49b3-a90b-7ad12e2cb3dc', url: 'https://github.com/snaveen457/maven-web-application.git'
    }
    
    stage('Build'){
 sh "${mavenHome}/bin/mvn clean package"
 }
 stage('ExecutionSonaQubeReport'){
 sh "${mavenHome}/bin/mvn sonar:sonar"
 }

 stage("deplot to tomcat"){
     
 sshagent(['3823e2aa-c202-49bc-b591-b30c9306faef']){
     sh "scp -o  StrictHostKeyChecking=no target/maven-web-application.war ec2-user@13.211.157.52:/opt/tomcat/webapps/"
 }
}
 
}
single line comment -->//
multi line comment -->/* */ before }


2)Declarative way

create a job,type pipelinescript-project,select pipeline and click on ok.
go to pipeline projec,scroll down under pipeline,pipeline script is available, provide reqirements.

After creating pipeline job,under pipeline syntax click on,go to snippet Generator,under sample steps scroll down select git: Git,next asking which repository, 
give the repository url,give branch name is development, save the github credential.and copy the script paste under stage ('checkoutcode')

mavenHome=/var/lib/jenkins/tools/hudson.tasks.Maven_MavenInstallation/maven3.6.2
${mavenHome}/bin/mvn clean package

scp filename username@hostname:/.../webapps
sh "scp target/maven-web-application.war ec2-user@13.211.157.52:/opt/tomcat/webapps"
 sshagent(['3823e2aa-c202-49bc-b591-b30c9306faef']){
     sh "scp -o  StrictHostKeyChecking=no target/maven-web-application.war ec2-user@13.211.157.52:/opt/tomcat/webapps"
ssh Agent plug in
man scp  StrictHostKeyChecking=no
permission deined will get error 
for webappsfolder give chmod -R 777 webapps





2)Declarative way pipeline script.
freestyle
maven
pipeline

Multi branch pipeline project type
------------------------------------
create a one branch from master mbpmaster, master branch and mbpmaster, development having jenkins file.in stage brnch and testqa jenkins file not there,
if we take master branch how many jobs to create it will create 3 master mbpmaster and development. remainig branch it will not create jobs because jenkins file not there.
create job at jenkins, give name MBPLProject type, select pipelin project type,under branch sources,select the git hub give the git repo url and gitcredential,
don't give any branch name,click on save.click build.

Scan Multibranch pipeline Trigger
---------------------------------
peridocally if not otherwise run, selct and give time. later you have to update code from any branch and triggger.

jenkins kubernate 

jenkins Backup
--------------
ThinBackup,

go to Manage jenkins,go to plug in manager, search in available Thinbackup,select Thinbackup, install without restart.
Now go to manage jenkins,scroll down end will see thin backup.click on thinbackup,there 3 items will show like Back Now,Restore,Settings.
click on settins,give backup directory means jenkins path,/var/lib/jenkins/jenkinsbackup,max number of backup sets give 5,under select what ever back up need,save.
in jenkins url click on backup now,it will take back up.

Backup schdule for full backups--> every time it will take all the backup  *****(Every minute going to take back up)
Backup schdule for differential backups-->from previous backup to currently any updates are there that one only going to take.

in jenkis server go to cd /var/lib/jenkins in jenkins folder create one folder like mkdir jenkinsbackup, ls -l,
chown -R jenkins:jenkins jenkinsbackup
pwd  
/var/lib/jenkins/jenkinsbackup 
ls
job config history plug in (refer you tube this video)-->you can restore the deleted jobs also.
job import plug in (refer you tube this video)

-----------------------------------------------------
Master Slave Architecture
-------------------------
create one master for jenkins one for slave1
login slave 1
go to the manage jenkins,go to manage nodes and clouds,
create a new node, give the name node1, in Description mentioned what is use of this node,
remote root directory need to give path /home/ec2-user/node1
in jenkins server pc create mkdir node1,go inside node1, then take that path pwd /home/ec2-user/node1
Labels you can give label names
usage use this node as much as possible
launched method launch agents via SSH node pulic ip mentione in Host, give credential ssh username with private key user name ec2-user add pem file.
give the desecrption slave1 
host key verification starategy manually trusted key verification strategy
available keep this agent online as much as possible
node property  click on save.
it connect master to node1
login node 1 install java,
cd node1
ls
remoting remototing .jar

go to jenkisns job, build any job, restrict where this project in run
give the node name in label expression,trigger job.
in node1 install git, now trigger job it will come to node.
in node1 

Jenkins Migration
----------------
job import plug in for jenkins migration.refer video from youtube

jenkins CLI
------------------
if you want access hostnname:8080/cli/
form down load jenkins.cli.jar file,after downloading create one folder and copy here jenkins.cli.jar,take this path,

java -jar jenkins-cli.jar -s http://3.14.84.84:9980/ -websocket help,
java -jar jenkins-cli.jar -auth Naveenstar:Princy@#$2023 -s http://3.14.84.84:9980/ -websocket help
java -jar jenkins-cli.jar -auth Naveenstar:Princy@#$2023 -s http://3.14.84.84:9980/ -websocket build diskspace(job name) to trigger build
java -jar jenkins-cli.jar -auth Naveenstar:Princy@#$2023 -s http://3.14.84.84:9980/ -websocket delete-job mbplproject delete job

creating token go to manage jenkins, go to configure, under API Token, give token name, generate the token,copy the token id save some where.instead of password you can give token.

upstream and Down stream
---------------------------
flipkart-dev-->upstream job
flipkart-qa-->downstream job
flipkart -prod

go to flipkart-qa, go to configure, under build triggers, select build after other projects are built,in project to watch add flipkart-dev,save.































